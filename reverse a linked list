// Recursive Java program to reverse
// a linked list
class recursion {
	static Node head; // head of list
	
	static class Node {
		int data;
		Node next;
		Node(int d)
		{
			data = d;
			next = null;
		}
	}

	static Node reverse(Node head)
	{
		Node temp = head;
		Node prev = null;
		Node next = null;
		while(temp!=null) 
		{
			next = temp.next;
			temp.next = prev;
			prev = temp;
			temp = next;
		}
		while(prev!=null) 
		{
			System.out.println(prev.data);
			prev = prev.next;
		}
	}

	/* Function to print linked list */
	static void print()
	{
		Node temp = head;
		while (temp != null) {
			System.out.print(temp.data + " ");
			temp = temp.next;
		}
		System.out.println();
	}

	static void push(int data)
	{
		Node temp = new Node(data);
		temp.next = head;
		head = temp;
	}


/* Driver program to test above function*/
public static void main(String args[])
{
	/* Start with the empty list */
	
	push(20);
	push(4);
	push(15);
	push(85);

	System.out.println("Given linked list");
	print();

	head = reverse(head);

	System.out.println("Reversed Linked list");
	print();
}
}
